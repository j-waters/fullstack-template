# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type TargetRegex {
  nameRegex: String
  referenceRegex: String
}

type Target {
  manualName: String!
  regex: TargetRegex
  name: String!
  id: String!
  isInternal: Boolean!
}

type Transaction {
  account: Account!
  target: Target!
  amount: Float!
  date: DateTime!
  id: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type BalanceEntry {
  balance: Float!
  date: DateTime!
  id: String!
}

type BalanceInfo {
  inferredBalance: Float
  entryBalance: Float
  computedBalance: Float
  computedEarnings: Float
  date: DateTime!
}

type Account {
  name: String!
  balanceMethod: BalanceMethod
  targetRegex: TargetRegex
  balanceEntries: [BalanceEntry!]!
  balance: BalanceInfo!
  id: String!
  info: AccountInfo!
  transactions: [Transaction!]!
  balanceHistory: [BalanceHistoryPoint!]!
}

enum BalanceMethod {
  Import
  OwnTransactions
  ExternalTransactions
  Entry
}

type AccountInfo {
  ownTransactionsCount: Float!
  externalTransactionsCount: Float!
}

type BalanceHistoryPoint {
  balance: BalanceInfo!
  date: DateTime!
}

type IngestionDefinition {
  name: String!
}

type Requisition {
  name: String!
  accountIds: [String!]!
  created: DateTime!
  requisitionId: String!
  institutionId: String!
  link: String!
  referenceId: String!
}

type Institution {
  bic: String!
  countries: [String!]!
  id: String!
  logo: String!
  name: String!
  transaction_total_days: String!
}

type PeriodInsight {
  spending: Float!
  earning: Float!
  start: DateTime!
  end: DateTime!
  interval: String!
  subPeriods: [PeriodInsight!]!
}

type RecurringInsight {
  transactions: [Transaction!]!
  target: Target!
  amount: Float!
  interval: Float!
  start: DateTime!
  end: DateTime!
  count: Float!
  isActive: Boolean!
}

type Query {
  accounts: [Account!]!
  account(id: ObjectId!): Account!
  wealth: Float!
  targets: [Target!]!
  target(id: ObjectId!): Target!
  ingestionDefinitions: [IngestionDefinition!]!
  nordigenInstitutions: [Institution!]!
  transactions(filter: TransactionFilter): [TransactionResult!]!
  transaction(id: Int!): Transaction!
  plaidLinkToken: String!
  periodInsights(interval: PeriodInterval!, count: Float!): [PeriodInsight!]!
  recurringTransactions: [RecurringInsight!]!
}

"""ObjectId custom scalar type"""
scalar ObjectId

union TransactionResult = Transaction | InternalTransaction

type InternalTransaction {
  from: Account!
  to: Account!
  amount: Float!
  date: DateTime!
  id: String!
}

input TransactionFilter {
  account: String
}

enum PeriodInterval {
  DAY
  WEEK
  MONTH
  YEAR
  FOREVER
}

type Mutation {
  createAccount(createAccountInput: CreateAccountInput!): Account!
  updateAccount(updateAccountInput: UpdateAccountInput!): Account!
  removeAccount(id: ObjectId!): Boolean!
  createTarget(createTargetInput: CreateTargetInput!): Target!
  updateTarget(updateTargetInput: UpdateTargetInput!): Target!
  removeTarget(id: ObjectId!): Target!
  ingest: Boolean!
  createRequisition(createRequisitionInput: CreateRequisitionInput!): Requisition!
  requisitionComplete: Boolean!
  csvIngest: [Transaction!]!
  createTransaction(createTransactionInput: CreateTransactionInput!): Transaction!
  updateTransaction(updateTransactionInput: UpdateTransactionInput!): Transaction!
  removeTransaction(id: Int!): Transaction!
  processTransactions: Boolean!
}

input CreateAccountInput {
  name: String!
  balanceMethod: BalanceMethod
  balanceEntries: [CreateBalanceInput!]!
  targetRegex: UpdateTargetRegex
}

input CreateBalanceInput {
  balance: Float!
  date: DateTime!
  id: String!
}

input UpdateTargetRegex {
  nameRegex: String
  referenceRegex: String
}

input UpdateAccountInput {
  name: String
  balanceMethod: BalanceMethod
  balanceEntries: [CreateBalanceInput!]
  targetRegex: UpdateTargetRegex
  id: ObjectId!
}

input CreateTargetInput {
  manualName: String!
  regex: UpdateTargetRegex
}

input UpdateTargetInput {
  manualName: String
  regex: UpdateTargetRegex
  id: ObjectId!
}

input CreateRequisitionInput {
  institutionId: String!
}

input CreateTransactionInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateTransactionInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}
